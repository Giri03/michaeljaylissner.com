<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Michael Jay Lissner</title><link href="http://mlissner.github.io/michaeljaylissner.com/" rel="alternate"></link><link href="http://mlissner.github.io/michaeljaylissner.com/feeds/privacy-and-security.atom.xml" rel="self"></link><id>http://mlissner.github.io/michaeljaylissner.com/</id><updated>2013-02-02T14:27:15+01:00</updated><entry><title>Enabling Two-Factor Authentication</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2013/02/02/enabling-two-factor-authentication/" rel="alternate"></link><updated>2013-02-02T14:27:15+01:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2013-02-02:michaeljaylissner.com/posts/2013/02/02/enabling-two-factor-authentication/</id><summary type="html">&lt;p&gt;This post is as much Public Service Announcement as anything else. I didn't realize that two-factor authentication had finally taken off. It's practically vital for your email account (you're asking for trouble without it), but in the past year or so, a bunch of other services have begun offering it. &lt;/p&gt;
&lt;p&gt;Today I went on a little security binge, and found that I could turn on two-factor authentication at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google/Gmail&lt;/li&gt;
&lt;li&gt;Yahoo&lt;/li&gt;
&lt;li&gt;Dropbox&lt;/li&gt;
&lt;li&gt;Charles Schwab (they send you a fob for free)&lt;/li&gt;
&lt;li&gt;Facebook&lt;/li&gt;
&lt;li&gt;Paypal&lt;/li&gt;
&lt;li&gt;Amazon Web Services&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One note about Charles Schwab is that getting their fob is great, but it's hardly all you should do to secure your account. You should also set up what they call a "verbal password" that you have to provide whenever you call in. Without it, it's pretty easy to get into an account via their surprisingly weak phone security.&lt;/p&gt;
&lt;p&gt;Anyway, this is a pretty good list so far. The companies are using a handful of different techniques for doing this, but they all seem pretty solid in the end. Google's, naturally, seems to be one of the most robust, but I'm impressed there's so much offered.&lt;/p&gt;
&lt;p&gt;Go set these up! &lt;/p&gt;</summary><category term="google"></category><category term="yahoo"></category><category term="dropbox"></category><category term="two-factor authentication"></category><category term="charles schwab"></category><category term="facebook"></category><category term="paypal"></category><category term="amazon"></category></entry><entry><title>URL Hacking at REI.com</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2012/07/31/url-hacking-at-rei-dot-com/" rel="alternate"></link><updated>2012-07-31T19:19:00+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2012-07-31:michaeljaylissner.com/posts/2012/07/31/url-hacking-at-rei-dot-com/</id><summary type="html">&lt;p&gt;I'm about two hours away from heading on vacation to Montreal, but I wanted to post a quick update about a vulnerability I found on REI.com last night.&lt;/p&gt;
&lt;p&gt;The vulnerability was a simple one. A few days ago, to get a 15% off coupon, I signed up for their Gear Mail newsletter. It eventually came, and at the bottom it had a link to unsubscribe, which I clicked (I was only after the 15% sign-up coupon). &lt;/p&gt;
&lt;p&gt;The link led to:&lt;/p&gt;
&lt;p&gt;http://email.rei.com/cgi-bin12/DM/t/nCT4n0N3xbv0ESo05DPf0Et&amp;amp;EmailAddr=mlissner@michaeljaylissner.com&lt;/p&gt;
&lt;p&gt;Which redirects to:&lt;/p&gt;
&lt;p&gt;https://preferences.rei.com/rei/rei_PrefCtr.asp?EmailAddr=mlissner@michaeljaylissner.com&lt;/p&gt;
&lt;p&gt;I immediately noticed the badness in these URLs, and at a whim, I tried modifying the URL to use a friend's email address. Sure enough it worked, and I could look up the full name and zip code of anybody who had an email address that was in REI's system.&lt;/p&gt;
&lt;p&gt;Around midnight last night, I sent REI an email informing them of the problem, giving them a month to fix it, and I posted on Twitter that I had found a vulnerability on REI.com. Naively, I thought that if I didn't post the link on Twitter, nobody would be able to figure it out, but of course, by morning a friend of mine (a security/privacy researcher, sigh) had found the link and posted it. Not only that, but for fun, he had tried his address book against the link, and turned up 30 of his friend's names and zip codes out of a sample of about 200.&lt;/p&gt;
&lt;p&gt;I sent another note to REI to make sure that they knew about the link now being in the open, and that the month I promised them had been curtailed by my own mistake. &lt;/p&gt;
&lt;p&gt;It's now 7:15pm, about 19 hours after I first informed them of the problem, and it's fixed. It still seems to be possible for me to update your email subscriptions, but at least I can't look up information about you.&lt;/p&gt;</summary><category term="responsible disclosure"></category><category term="rei"></category><category term="hacking"></category></entry><entry><title>Respecting privacy while providing hundreds of thousands of public documents</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2012/01/16/respecting-privacy-while-providing-hundreds-of-thousands-of-public-documents/" rel="alternate"></link><updated>2012-01-16T22:13:22+01:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2012-01-16:michaeljaylissner.com/posts/2012/01/16/respecting-privacy-while-providing-hundreds-of-thousands-of-public-documents/</id><summary type="html">&lt;p&gt;At CourtListener, we have always taken privacy very seriously. We &lt;a href="http://courtlistener.com/coverage/"&gt;have over 600,000&lt;/a&gt; cases currently, most of which are available on Google and other search engines. But in the interest of privacy, we make two broad exceptions to what's available on search engines: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;As is stated in our &lt;a href="http://courtlistener.com/removal/"&gt;removal policy&lt;/a&gt;, if someone gets in touch with us in writing and requests that we block search engines from indexing a document, we generally attempt to do so within a few hours. &lt;/li&gt;
&lt;li&gt;If we discover a privacy problem within a case, we proactively block search engines from indexing it. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each of these exceptions presents interesting problems. In the case of requests to prevent indexing by search engines, we're often faced with an ethical dilemma, since in many instances, the party making the request is merely displeased that their involvement in the case is easy to discover and/or they are simply embarrassed by their past. In this case, the question we have to ask ourselves is: Where is the balance between the person's right to privacy and the public's need to access court records, and to what extent do changes in &lt;a href="http://scholar.google.com/scholar?hl=en&amp;amp;q=practical+obscurity+privacy"&gt;practical obscurity&lt;/a&gt; compel action on our behalf? For example, if someone convicted of murder or child molestation is trying to make information about their past harder to discover, how should we weigh the public's interest in easily locating this information via a search engine? In the case of convicted child molesters, we can look to &lt;a href="http://en.wikipedia.org/wiki/Megan%27s_Law"&gt;Megan's law&lt;/a&gt; for a public policy stance on the issue, but even that forces us to ask to what extent we should chart our own path, and to what extent we should follow public policy decisions. &lt;/p&gt;
&lt;p&gt;On the opposite end of the spectrum, many of the cases that we block search engines from indexing are asylum cases where a person has lost an attempt to stay in the United States, and been sent back to a country where they feel unsafe. In such cases, it seems clear that it's important to keep the person's name out of search engine results, but still we must ask to what extent do we have an obligation to identify and block such cases from appearing proactively rather than post hoc? &lt;/p&gt;
&lt;p&gt;In both of these scenarios, we have taken a middle ground that we hope strikes a balance between the public's need for court documents and an individual's desire or need for privacy. Instead of either proactively blocking search engines from indexing cases or keeping cases in search results against a party's request, our current policy is to block search engines from indexing a web page as each request comes in. We currently have 190 cases that are blocked from search results, and the number increases regularly. &lt;/p&gt;
&lt;p&gt;Where we do take proactive measures to block cases from search results is where we have discovered unredacted or &lt;a href="https://freedom-to-tinker.com/blog/tblee/what-gets-redacted-pacer"&gt;improperly redacted&lt;/a&gt; social security numbers in a case. Taking a cue from the now-defunct Altlaw, whenever a case is added, we look for character strings that appear to be social security numbers, tax ID numbers or alien ID numbers. If we find any such strings, we replace them with x's, and we try to make sure the unredacted document does not appear in search results outside of CourtListener. &lt;/p&gt;
&lt;p&gt;The methods we have used to block cases from appearing in search results have evolved over time, and I'd like to share what we've learned so others can give us feedback and learn from our experiences. There are five technical measures we use to keep a case out of search results: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;robots.txt file &lt;/li&gt;
&lt;li&gt;HTML meta noindex tags &lt;/li&gt;
&lt;li&gt;HTTP X-Robots-Tag headers &lt;/li&gt;
&lt;li&gt;sitemaps.xml files &lt;/li&gt;
&lt;li&gt;The webmaster tools provided by the search engines themselves&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each of these deserves a moment of explanation. &lt;a href="http://www.robotstxt.org/"&gt;robots.txt&lt;/a&gt; is a protocol that is respected by all major search engines internationally, and which allows site authors (such as myself) to identify web pages that shouldn't be crawled. Note that I said &lt;strong&gt;crawled&lt;/strong&gt; not &lt;strong&gt;indexed&lt;/strong&gt;. This is a very important distinction, as I'll explain momentarily. &lt;/p&gt;
&lt;p&gt;HTML meta tags are a tag that you can place into the HTML of a page, and which instructs search engines not to &lt;strong&gt;index&lt;/strong&gt; a page. Since this is an HTML format, this method only works on HTML pages. &lt;/p&gt;
&lt;p&gt;HTTP X-Robots-Tag headers are similar to HTML meta tags, but they allow site authors to request that an &lt;em&gt;item&lt;/em&gt; not be indexed. That item may be an HTML page, but equally, it may be a PDF or even an image that should not searchable. &lt;/p&gt;
&lt;p&gt;Further, we provide an &lt;a href="http://www.sitemaps.org/protocol.html"&gt;XML sitemap&lt;/a&gt; that search engines can understand, and which tells them about every page on the site that they should crawl and index. &lt;/p&gt;
&lt;p&gt;All of these elements fit together into a complicated melange that has 
absorbed many development hours over the past two years, 
as different search engines interpret these standards in different ways. &lt;/p&gt;
&lt;p&gt;For example, Google and Bing interpret the robots.txt files as blocks to 
their crawlers. This means that web pages listed in robots.txt will not be 
&lt;strong&gt;crawled&lt;/strong&gt; by Google or Bing, but that does not mean those pages will not 
be &lt;strong&gt;indexed&lt;/strong&gt;. Indeed, if Google or Bing learn of the existence of a web 
page (for example, because another page linked to it), 
then they will include it in &lt;a href="http://www.youtube.com/watch?v=KBdEwpRQRD0"&gt;their&lt;/a&gt; &lt;a href="http://www.bing.com/community/site_blogs/b/webmaster/archive/2009/08/21/prevent-a-bot-from-getting-lost-in-space-sem-101.aspx"&gt;indexes&lt;/a&gt;. This is true even if 
robots.txt explicitly blocks robots from crawling the page, 
because to include it in their indexes, they don't &lt;strong&gt;have to&lt;/strong&gt; crawl it 
&amp;mdash; they just need to know about it! Even your own link to a page is 
sufficient for Google or Bing to know about the page. And what's worse, 
if you have a good URL with descriptive words within it, 
Google or Bing will know the terms in the URLs even when they haven't 
crawled the page. So if your URL is example
.com/private-page-about-michael-jackson, a query for [ Michael Jackson ] 
could certainly bring it up, even if it were never crawled. &lt;/p&gt;
&lt;p&gt;The solution to this is to allow Google and Bing to crawl the pages, but to use noindex meta or HTTP tags. If these are in place, the pages will not appear in the index at all. This sounds paradoxical: to exclude pages from appearing in Google and Bing, you have to allow them to be crawled? &lt;a href="https://support.google.com/webmasters/bin/answer.py?hl=en&amp;amp;answer=93710"&gt;Yes, that's correct&lt;/a&gt;. Furthermore, it's theoretically possible that Google or Bing could learn about a page on your site from a link, and then not crawl it immediately or at all. In this case, they will know the URL, but won't know about and X-Robots-Tag headers or meta tags. Thus, they might include the document against your wishes. For this reason, it's important to &lt;strong&gt;include&lt;/strong&gt; private pages in your sitemap.xml file, inviting and encouraging Google and Bing to crawl the page specifically so the page can be excluded from their indexes.&lt;/p&gt;
&lt;p&gt;Yahoo! uses Bing to power their search engine, and AOL uses Google, so the above strategy applies to them as well.&lt;/p&gt;
&lt;p&gt;Other search engines take a different approach to robots.txt. Ask.com, The Internet Archive and the Russian search engine Yandex.ru all respect the robots meta tag, but not the x-robots-tag HTTP header. Thus, for these search engines, the strategy above works for HTML files, but not for any other files. These crawlers therefore need to be blocked from accessing those other files. On the upside, unlike Google and Bing, it appears that these search engines will not show a document in their results if they have not crawled it. Thus, using robots.txt alone should be sufficient.&lt;/p&gt;
&lt;p&gt;A third class of search engines support neither the robots HTML meta tag, nor the x-robots-tag HTTP header. These are typically less popular or less mature crawlers, and so they must be blocked using robots.txt. There are two approaches to this. The first is to list blocked pages individually in the robots.txt file, and the second is to simply block these search engines from all access. While it's possible to list each private document in robots.txt, doing so creates a privacy loophole, since it lists all private documents in one place. At CourtListener, therefore, we take a conservative approach, and completely block all search engines that do not support the HTML meta tag or the x-robots-tag HTTP header.&lt;/p&gt;
&lt;p&gt;The final action we take when we receive a request that a document on our site stop appearring in search results, is to use the webmaster tools provided by the major search engines&lt;sup&gt;1&lt;/sup&gt; to explicitly ask those search engines to exclude the document(s) from their results.&lt;/p&gt;
&lt;p&gt;Between these measures, private documents on CourtListener should be removed from all major and minor search engines. Where posssible this strategy takes a very granular approach, and where minor search engines do not support certain standards, we take a conservative approach, blocking them entirely.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update, 2012-04-29:&lt;/strong&gt; You may also want to look at our &lt;a href="http://mlissner.github.io/michaeljaylissner.com/posts/2012/04/27/further-privacy-protections-at-courtlistener/"&gt;discussion of the impact of putting people's names into your URLs, and the way that affects your sitemap files&lt;/a&gt;.&lt;/p&gt;
&lt;!-- actual footnotes --&gt;

&lt;ol&gt;
&lt;li&gt;We use &lt;a href="http://www.google.com/webmasters/tools"&gt;Google's Webmaster 
Tools&lt;/a&gt; and &lt;a href="http://www.bing.com/toolbox/webmaster"&gt;Bing's 
Webmaster Tools&lt;/a&gt;. Before it was merged into Bing's tools, 
we also previously used &lt;a href="http://siteexplorer.search.yahoo
.com/"&gt;Yahoo's Site Explorer&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;</summary><category term="robots.txt"></category><category term="privacy"></category><category term="practical obscurity"></category><category term="policy"></category><category term="courtlistener.com"></category><category term="courtlistener.com"></category><category term="policy"></category><category term="practical obscurity"></category><category term="privacy"></category><category term="robots.txt"></category></entry><entry><title>More Security Papers: Breaking ReCAPTCHA and Proactive Methods for Secure Design</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2009/12/12/more-security-papers-breaking-recaptcha-and-proactive-methods-for-secure-design/" rel="alternate"></link><updated>2009-12-12T12:07:58+01:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2009-12-12:michaeljaylissner.com/posts/2009/12/12/more-security-papers-breaking-recaptcha-and-proactive-methods-for-secure-design/</id><summary type="html">&lt;p&gt;Two more security papers today. &lt;/p&gt;
&lt;p&gt;In the first, &lt;a href="http://mlissner.github.io/michaeljaylissner.com/pdfs/breaking-recaptcha.pdf"&gt;&lt;strong&gt;Breaking ReCAPTCHA&lt;/strong&gt;&lt;/a&gt; I discuss a few methods that 
ReCAPTCHAs can be hacked, and talk a bit about the ways that they were 
attacked by the Anonymous hacker group. I should mention at the outset that
none of the approaches here are particularly useful though, 
and that ultimately, the hacker group beat ReCAPTCHA by simply out 
numbering it.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mlissner.github.io/michaeljaylissner.com/pdfs/proactive-security.pdf"&gt;The &lt;em&gt;second paper&lt;/em&gt;&lt;/a&gt; is a brief discussion of some approaches an 
organization might take when beginning a project in which security is a 
high concern. Essentially, it takes a chronological approach, 
from the start to the end of the project. &lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;</summary><category term="security"></category><category term="captcha"></category><category term="ReCAPTCHA"></category><category term="Design"></category></entry><entry><title>Analyzing Facebook's Security Mechanisms</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2009/11/15/analyzing-facebooks-security-mechanisms/" rel="alternate"></link><updated>2009-11-15T17:43:55+01:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2009-11-15:michaeljaylissner.com/posts/2009/11/15/analyzing-facebooks-security-mechanisms/</id><summary type="html">&lt;p&gt;For my &lt;a href="http://is219.blogspot.com/"&gt;Privacy, 
Security and Cryptography&lt;/a&gt; class, we studied a set of 13 principles for 
secure systems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Security is Economics&lt;/li&gt;
&lt;li&gt;Least Privilege&lt;/li&gt;
&lt;li&gt;Use Fail-Safe Defaults&lt;/li&gt;
&lt;li&gt;Separation of Responsibility&lt;/li&gt;
&lt;li&gt;Defense in Depth&lt;/li&gt;
&lt;li&gt;Psychological Acceptability&lt;/li&gt;
&lt;li&gt;Usability&lt;/li&gt;
&lt;li&gt;Ensure Complete Mediation&lt;/li&gt;
&lt;li&gt;Least Common Mechanism&lt;/li&gt;
&lt;li&gt;Detect if You Cannot Prevent&lt;/li&gt;
&lt;li&gt;Orthogonal Security&lt;/li&gt;
&lt;li&gt;Don't Rely on Security Through Obscurity&lt;/li&gt;
&lt;li&gt;Design Security in, From the Start&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For our midterm, we were asked to analyze how Facebook exemplifies or does not 
follow these principles. It was an interesting assignment, which finally 
forced me to think more thoroughly about Facebook's security policies, and I'm
happy to &lt;a href="http://mlissner.github.io/michaeljaylissner.com/pdfs/facebook-security.pdf"&gt;attach my findings&lt;/a&gt; here. &lt;/p&gt;
&lt;p&gt;For some people these may be rather run of the mill notes. For others, you may 
be surprised at poor security of the world's biggest photo and social 
networking site.&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;</summary><category term="security"></category><category term="facebook"></category><category term="paper"></category><category term="privacy"></category></entry><entry><title>Google Resonds to the Twitter Attack</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2009/10/02/google-responds-to-the-twitter-attack/" rel="alternate"></link><updated>2009-10-02T20:37:12+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2009-10-02:michaeljaylissner.com/posts/2009/10/02/google-responds-to-the-twitter-attack/</id><summary type="html">&lt;p&gt;A few months ago, Twitter was hacked by means of a &lt;a href="http://www.techcrunch.com/2009/07/19/the-anatomy-of-the-twitter-attack/"&gt;clever, 
yet somewhat obvious approach&lt;/a&gt;. Today, I saw the following alert on my Gmail
account, ensuring that this security vulnerability is fixed. I'm often 
impressed by Gmail, but this is great to see:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey, this is important: If you ever lose access to your account, 
you can send password reset info to [myemailaddress@michaeljaylissner.com]. 
This address is correct | Update this address&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What happened in the case of Twitter was that a hacker did the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Figured out the Gmail address of a Twitter employee&lt;/li&gt;
&lt;li&gt;Went to &lt;a href="https://www.google.com/accounts/ForgotPasswd?service=mail&amp;amp;fpOnly=1"&gt;Gmail's password reminder&lt;/a&gt;, and requested a reminder&lt;/li&gt;
&lt;li&gt;This informed the hacker that an email reminder was sent to a specific 
 Hotmail address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;That Hotmail address had been automatically closed due to disuse&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The hacker set up that email account, since it was now available&lt;/li&gt;
&lt;li&gt;The hacker then requested another password reminder, which summarily sent an 
 email to his new Hotmail account&lt;/li&gt;
&lt;li&gt;This gave the hacker complete access to the Twitter employee's gmail 
 account (and thus a lot of other stuff)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The new alert that Gmail is now popping up should serve the function of 
updating this, and, if done correctly, should fix this problem permanently.
Well done Gmail.&lt;/p&gt;</summary><category term="security"></category><category term="Twitter"></category><category term="gmail"></category><category term="secret questions"></category><category term="passwords"></category></entry><entry><title>Rethinking Facebook Privacy Settings</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2009/08/17/rethinking-facebook-privacy-settings/" rel="alternate"></link><updated>2009-08-17T12:09:06+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2009-08-17:michaeljaylissner.com/posts/2009/08/17/rethinking-facebook-privacy-settings/</id><summary type="html">&lt;p&gt;Ars Technica has &lt;a href="http://arstechnica.com/web/news/2009/08/meshing-social-networking-and-privacy-on-facebook.ars"&gt;an article&lt;/a&gt; today outlining some excellent techniques for safeguarding your privacy while using Facebook. One of the best methods explained in the article is to cordon off your friends into different groups of people, and to then set different permissions for those groups. Thus, the common technique is to put your ex-partners into one group, your friends into another, family into another, and thus down the line.&lt;/p&gt;
&lt;p&gt;But  in practice this technique is nigh on impossible. I have family members (such as cousins) that are close friends, and so-called friends that, really, I haven't talked to since high school. Beyond this, managing the groups is a problem too since over time, some of your friends become closer and others more distant. &lt;/p&gt;
&lt;p&gt;Thinking through this problem, I have come up with a better, and perhaps more obvious solution: Simply organize your Facebook friends into groups based on how much you want those people to know about you. In practice I found this to be fairly simple with only three groups: Loose Privacy, Standard Privacy, and Strict Privacy. Bosses, ex-partners and distant friends go into the Strict category, close friends and current partners go into the Loose category, and everybody else goes into the Medium category. &lt;/p&gt;
&lt;p&gt;Admittedly, this dumbs down the power that Facebook gives you to categorize your friends into groups, but in practice, it's much easier to maintain, since there are only three lists, and it's clear who belongs in which.&lt;/p&gt;
&lt;p&gt;A second group of  settings that people are likely unaware of are those that "limit what types of information your friends can see about you through applications." These are important and creepy because by default, when your friends install an application, that application can see and aggregate an incredible quantity of information about you, even without your or your friend's permission or knowledge. As part of its &lt;a href="http://dotrights.org"&gt;dotrights campaign&lt;/a&gt;, the ACLU is currently working on an application that demonstrates this loophole, but for the moment, it's probably wise to adjust these settings. &lt;/p&gt;
&lt;p&gt;To adjust these settings so third-party applications can see as little information as possible (without your friends simply not using them), go to Settings &amp;gt; Privacy &amp;gt; Applications, and then click on the "Other" tab (&lt;a href="http://www.facebook.com/privacy/?view=platform&amp;tab=other"&gt;this link&lt;/a&gt; should also work, if you're logged in). Once on that page, uncheck all of the boxes in the first section, and save your settings.&lt;/p&gt;</summary><category term="facebook"></category><category term="privacy"></category><category term="configuration"></category></entry><entry><title>Making Prey of Computer Thieves</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2009/07/25/making-prey-of-computer-thieves/" rel="alternate"></link><updated>2009-07-25T22:39:35+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2009-07-25:michaeljaylissner.com/posts/2009/07/25/making-prey-of-computer-thieves/</id><summary type="html">&lt;p&gt;Laptops get stolen. It sucks, but we know it happens from time to time. 
Recently, I've been checking out programs that can help to catch the 
thieves (and dabbling in writing my own).&lt;/p&gt;
&lt;p&gt;One program that I found, called &lt;a href="http://preyproject.com"&gt;Prey&lt;/a&gt;, helps to do just this. Once 
installed, every few minutes it will check a website to see if a page 
exists. If that page exists, it will collect a bunch of information about 
the computer, and send that (using SMTP of your choice) to an email address
 of your choice.&lt;/p&gt;
&lt;p&gt;So, for example, if I set up a web page at http://michaeljaylissner
.com/laptop-stolen, in a few minutes, Prey will see that page, 
and will collect the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The IP address where my computer is connected (this is almost as good as 
 the thief's physical address)&lt;/li&gt;
&lt;li&gt;The name of the wireless network my computer is connected to, and a list of 
 the others in the area&lt;/li&gt;
&lt;li&gt;The MAC address of the wireless router my computer is connected to&lt;/li&gt;
&lt;li&gt;How long my computer has been on (uptime)&lt;/li&gt;
&lt;li&gt;Any files that have been modified in the last X minutes&lt;/li&gt;
&lt;li&gt;Any programs that are currently running&lt;/li&gt;
&lt;li&gt;Any open connections to websites or online services&lt;/li&gt;
&lt;li&gt;A picture of the thief, if you have a webcam enabled&lt;/li&gt;
&lt;li&gt;And best of all, a screenshot at the time of the report&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once I get the email with all this information, it's just a matter of taking 
it to the police, and convincing them to take action on it. &lt;/p&gt;
&lt;p&gt;Of course, all of this could be useless if the thief decides to immediately
wipe the data on the computer, but it's a good safeguard that can weed out 
the dumb thieves at least.&lt;/p&gt;</summary><category term="security"></category><category term="prey"></category></entry><entry><title>A Real Problem You Should Fix. Now.</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2009/04/12/a-real-problem-you-should-fix-now/" rel="alternate"></link><updated>2009-04-12T14:36:49+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2009-04-12:michaeljaylissner.com/posts/2009/04/12/a-real-problem-you-should-fix-now/</id><summary type="html">&lt;p&gt;I've mentioned secret questions on my site before, but I never quite realized how much of a problem they are until today, when I discovered &lt;a href="http://uspublicrecords.com"&gt;uspublicrecords.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's a simple site. You put in a name, and if it has that person in its database, it gives you their age, middle name, and family members. So far, I haven't found any names it &lt;em&gt;doesn't&lt;/em&gt; have.&lt;/p&gt;
&lt;p&gt;Using this information, I went and checked a friend's gmail secret question, which was, "What is your father's middle name?" I just happened to have that information from uspublicrecords.com, so I put it in, and changed their email password.* &lt;/p&gt;
&lt;p&gt;It's pretty creepy how easy this is, and fixing this problem could take days as you check all your secret questions one by one. This might make a good mashup: a system for checking all your secret questions.&lt;/p&gt;
&lt;p&gt;Anyway, now might be a good time to go change your secret questions, cause if it has anything to do with middle names, that site will hand them right out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With their OK, of course.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="security"></category><category term="problems"></category><category term="mashup idea"></category></entry><entry><title>On Airport Security and Knives</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2008/09/22/on-airport-security-and-knives/" rel="alternate"></link><updated>2008-09-22T16:39:48+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2008-09-22:michaeljaylissner.com/posts/2008/09/22/on-airport-security-and-knives/</id><summary type="html">&lt;p&gt;&lt;img alt="No Alt" src="http://mlissner.github.io/michaeljaylissner.com/images/opinel_splits.jpeg" /&gt; &lt;/p&gt;
&lt;p&gt;I had the occasion to go through airport security over the weekend, 
and I realized an interesting thing. If you want to get through security 
with a large knife, all you have to do is try to slip one through in your 
bag a few times over the course of a few days or weeks. &lt;/p&gt;
&lt;p&gt;Each time you fail, you act like an idiot ("oops!"), 
and give them the knife, proceeding without it to your airplane. Eventually,
the guy watching the x-ray screen will miss the knife, you will proceed, 
and you will finally be able to cut your airplane steak.&lt;/p&gt;
&lt;p&gt;I learned this lesson by accident when I nearly missed my plane. I had 
planned on checking my small bag with the knife in it, 
but when I arrived at the airport late (my fault), I could either miss my 
plane, or try to sneak the knife through.&lt;/p&gt;
&lt;p&gt;Since I didn't want to miss my flight, I tried and succeeded to get the 
pictured knife through. Pretty amazing that a three inch blade can pass 
right by, eh?&lt;/p&gt;
&lt;p&gt;I wonder if terrorists are patient...&lt;/p&gt;</summary><category term="politics"></category><category term="security"></category><category term="knife"></category></entry><entry><title>There's a Lesson About Yahoo! Security I Learned from Palin Today</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2008/09/17/there-is-a-lesson-about-yahoo-security-i-learned-from-palin-today/" rel="alternate"></link><updated>2008-09-17T15:08:09+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2008-09-17:michaeljaylissner.com/posts/2008/09/17/there-is-a-lesson-about-yahoo-security-i-learned-from-palin-today/</id><summary type="html">&lt;p&gt;The lesson is this: Yahoo! doesn't use encryption on their webmail. I'll 
repeat that: YAHOO! DOESN'T USE ENCRYPTION ON THEIR WEBMAIL! &lt;/p&gt;
&lt;p&gt;I'm nothing short of shocked. I could have sworn that Yahoo! was a $26B 
company. Surely, SURELY they, of all people would see the importance and 
value of secure email, right? Nope. &lt;/p&gt;
&lt;p&gt;They've been offering free email since at least April of 1996 when they had 
their IPO. Somehow in the last 12 years they never secured the damned thing?
 What?&lt;/p&gt;
&lt;p&gt;Note below the conspicuous use of http rather than https:&lt;/p&gt;
&lt;p&gt;&lt;img alt="No Alt" src="http://mlissner.github.io/michaeljaylissner.com/images/yahooSecuritySucks.png" /&gt;&lt;/p&gt;</summary><category term="palin"></category><category term="security"></category><category term="yahoo"></category></entry><entry><title>I Am Me, Dammit!</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2008/09/15/i-am-me-dammit/" rel="alternate"></link><updated>2008-09-15T15:00:30+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2008-09-15:michaeljaylissner.com/posts/2008/09/15/i-am-me-dammit/</id><summary type="html">&lt;p&gt;Well, it happened. The bastards stole my identity. They somehow got my credit 
card number, address, phone number, etc, took them, and put them to use. Grand 
total losses: $309. Not too bad, considering.&lt;/p&gt;
&lt;p&gt;I've called my credit card company, and they promise to reimburse me for my 
losses. This is when I thank the federal government for making them do this. 
Thank you feds!&lt;/p&gt;
&lt;p&gt;I'm thinking about how this happened, and I have a theory. I am about 95% sure 
this happened as a result of shopping for car parts online. One of the 
retailers I went to (lost to me now) decided to share my contact information 
with a number of "partners" so that a part I was looking for could be found 
more easily. I ended up getting the part, but I think they might have shared 
more info than they should have. Arg. &lt;/p&gt;
&lt;p&gt;After all of the services that credit cards have tried to sell me over the 
years to protect me from this kind of thing, I'm happy to say that I'm fine 
without them. It's really not the end of the world...it's annoying though, yes.&lt;/p&gt;</summary><category term="rant"></category><category term="theft"></category><category term="bastard"></category><category term="identity"></category><category term="security"></category></entry><entry><title>Bypass Form Protection in MS Word</title><link href="http://mlissner.github.io/michaeljaylissner.com/posts/2008/04/18/bypass-form-protections-in-microsoft-word/" rel="alternate"></link><updated>2008-04-18T10:13:22+02:00</updated><author><name>Michael Lissner</name></author><id>tag:mlissner.github.io,2008-04-18:michaeljaylissner.com/posts/2008/04/18/bypass-form-protections-in-microsoft-word/</id><summary type="html">&lt;p&gt;I recently had the occasion to need to get around the form protection in an 
MS Word file. Turns out it's a pretty easy exploit, but the directions I 
found elsewhere on the internet didn't quite do the job. &lt;/p&gt;
&lt;p&gt;Here's the trick:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the protected document, and save it as an .html file.&lt;/li&gt;
&lt;li&gt;Close the .doc file, and open the .html file in a text editor such as notepad or GVIM&lt;/li&gt;
&lt;li&gt;In the .html file, find a tag that says something like: "&amp;lt;w:UnprotectPassword&amp;gt;ABCDEF01&amp;lt;/w:UnprotectPassword&amp;gt;"&lt;/li&gt;
&lt;li&gt;Replace each of the characters in the tag with zeroes so it reads: &lt;code&gt;&amp;lt;
w:UnprotectPassword&amp;gt;00000000&amp;lt;/w:UnprotectPassword&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the .html file in Word, and save it as a .doc. Go to Tools &amp;gt; Unprotect Document&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That should do it. I'd love to hear any evidence to the contrary. &lt;/p&gt;</summary><category term="microsoft"></category><category term="msword"></category><category term="hacking"></category></entry></feed>